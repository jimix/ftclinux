From 7057271be29b3c561a2a5c1723789eb4b18f3fe6 Mon Sep 17 00:00:00 2001
From: Gabor Juhos <juhosg@openwrt.org>
Date: Sun, 24 Mar 2013 19:26:26 +0100
Subject: [PATCH 15/44] rt2x00: rt2800pci: enable SOC code for RT3883

Signed-off-by: Gabor Juhos <juhosg@openwrt.org>
---
 drivers/net/wireless/rt2x00/Kconfig     |    6 +++---
 drivers/net/wireless/rt2x00/rt2800pci.c |   17 +++++++++++------
 2 files changed, 14 insertions(+), 9 deletions(-)

--- a/drivers/net/wireless/rt2x00/Kconfig
+++ b/drivers/net/wireless/rt2x00/Kconfig
@@ -67,7 +67,7 @@ config RT2800PCI
 	select RT2800_LIB
 	select RT2X00_LIB_MMIO
 	select RT2X00_LIB_PCI if PCI
-	select RT2X00_LIB_SOC if SOC_RT288X || SOC_RT305X
+	select RT2X00_LIB_SOC if SOC_RT288X || SOC_RT305X || SOC_RT3883
 	select RT2X00_LIB_FIRMWARE
 	select RT2X00_LIB_CRYPTO
 	depends on CRC_CCITT
@@ -75,7 +75,7 @@ config RT2800PCI
 	---help---
 	  This adds support for rt27xx/rt28xx/rt30xx wireless chipset family.
 	  Supported chips: RT2760, RT2790, RT2860, RT2880, RT2890, RT3052,
-			   RT3090, RT3091 & RT3092
+			   RT3090, RT3091, RT3092 & RT3883
 
 	  When compiled as a module, this driver will be called "rt2800pci.ko".
 
@@ -223,7 +223,7 @@ config RT2X00_LIB_PCI
 
 config RT2X00_LIB_SOC
 	tristate "RT2x00 SoC support"
-	depends on SOC_RT288X || SOC_RT305X
+	depends on SOC_RT288X || SOC_RT305X || SOC_RT3883
 	depends on m
 	select RT2X00_LIB
 
--- a/drivers/net/wireless/rt2x00/rt2800pci.c
+++ b/drivers/net/wireless/rt2x00/rt2800pci.c
@@ -115,7 +115,8 @@ static void rt2800pci_mcu_status(struct
 	rt2800_shared_mem_unlock(rt2x00dev);
 }
 
-#if defined(CONFIG_SOC_RT288X) || defined(CONFIG_SOC_RT305X)
+#if defined(CONFIG_SOC_RT288X) || defined(CONFIG_SOC_RT305X) || \
+    defined(CONFIG_SOC_RT3883)
 static int rt2800pci_read_eeprom_soc(struct rt2x00_dev *rt2x00dev)
 {
 	void __iomem *base_addr = ioremap(0x1F040000, EEPROM_SIZE);
@@ -1427,7 +1428,8 @@ MODULE_DEVICE_TABLE(pci, rt2800pci_devic
 #endif /* CONFIG_PCI */
 MODULE_LICENSE("GPL");
 
-#if defined(CONFIG_SOC_RT288X) || defined(CONFIG_SOC_RT305X)
+#if defined(CONFIG_SOC_RT288X) || defined(CONFIG_SOC_RT305X) || \
+    defined(CONFIG_SOC_RT3883)
 static int rt2800soc_probe(struct platform_device *pdev)
 {
 	return rt2x00soc_probe(pdev, &rt2800pci_ops);
@@ -1451,7 +1453,7 @@ static struct platform_driver rt2800soc_
 	.suspend	= rt2x00soc_suspend,
 	.resume		= rt2x00soc_resume,
 };
-#endif /* CONFIG_SOC_RT288X || CONFIG_SOC_RT305X */
+#endif /* CONFIG_SOC_RT288X || CONFIG_SOC_RT305X || CONFIG_SOC_RT3883 */
 
 #ifdef CONFIG_PCI
 static int rt2800pci_probe(struct pci_dev *pci_dev,
@@ -1474,7 +1476,8 @@ static int __init rt2800pci_init(void)
 {
 	int ret = 0;
 
-#if defined(CONFIG_SOC_RT288X) || defined(CONFIG_SOC_RT305X)
+#if defined(CONFIG_SOC_RT288X) || defined(CONFIG_SOC_RT305X) || \
+    defined(CONFIG_SOC_RT3883)
 	ret = platform_driver_register(&rt2800soc_driver);
 	if (ret)
 		return ret;
@@ -1482,7 +1485,8 @@ static int __init rt2800pci_init(void)
 #ifdef CONFIG_PCI
 	ret = pci_register_driver(&rt2800pci_driver);
 	if (ret) {
-#if defined(CONFIG_SOC_RT288X) || defined(CONFIG_SOC_RT305X)
+#if defined(CONFIG_SOC_RT288X) || defined(CONFIG_SOC_RT305X) || \
+    defined(CONFIG_SOC_RT3883)
 		platform_driver_unregister(&rt2800soc_driver);
 #endif
 		return ret;
@@ -1497,7 +1501,8 @@ static void __exit rt2800pci_exit(void)
 #ifdef CONFIG_PCI
 	pci_unregister_driver(&rt2800pci_driver);
 #endif
-#if defined(CONFIG_SOC_RT288X) || defined(CONFIG_SOC_RT305X)
+#if defined(CONFIG_SOC_RT288X) || defined(CONFIG_SOC_RT305X) || \
+    defined(CONFIG_SOC_RT3883)
 	platform_driver_unregister(&rt2800soc_driver);
 #endif
 }
